# Generated by Django 3.0.14 on 2021-11-10 18:05

from django.db import migrations



# Historical models does not carry non ORM features
# so we have to redefine the SectionCategory enum constants here
class SC:
    ARTEFACT = 'AR'
    DESCRIPTION = 'DE'
    SAMPLE = 'SA'
    ANALYSIS_AND_RESULTS = 'AN'
    SYNTHESIS = 'SY'
    CONCLUSION = 'CO'
    REFERENCES = 'RE'


def nop_reverse_migration(apps, schema_editor):
    pass



def update_p1_section_templates(apps, schema_editor):
    SectionTemplate = apps.get_model('artefacts', 'SectionTemplate')
    SectionCategory = apps.get_model('artefacts', 'SectionCategory')

    sections = [
        dict(section_category=SC.DESCRIPTION, order=3, title='Study area(s)'),
        dict(section_category=SC.DESCRIPTION, title='Binocular observation and representation of the corrosion structure', order=4),
        dict(section_category=SC.SAMPLE, title='Sample(s)', order=5),
        dict(section_category=SC.ANALYSIS_AND_RESULTS, title='Analyses and results', order=6),
        dict(section_category=SC.SYNTHESIS, order=9, title='Synthesis of the binocular / cross-section examination of corrosion structure')
    ]
    current_sc_name = None
    for s in sections:
        if current_sc_name != s['section_category']:
            current_sc_name = s['section_category']
            current_section_category = SectionCategory.objects.get(page_template=1, name=current_sc_name)
        # removes section_category item from section' dict as it's the constant not the Object
        # which is actually current_section_category
        s.pop('section_category')

        obj, created = SectionTemplate.objects.update_or_create(page_template=1,
                                                                section_category=current_section_category,
                                                                order=s.pop('order'),
                                                                defaults=s)
        print(f'section template {obj} updated({not created})')



class Migration(migrations.Migration):

    dependencies = [
        ('artefacts', '0048_alter_token_right'),
    ]

    operations = [
        migrations.RunPython(update_p1_section_templates, nop_reverse_migration)
    ]
