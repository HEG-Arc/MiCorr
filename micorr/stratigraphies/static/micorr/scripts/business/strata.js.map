{"version":3,"sources":["../ES2015/business/strata.js"],"names":["Strata","nature","child","natureFamilyAbbrev","label","dependencies","Array","characteristics","subCharacteristics","childStrata","init","i","length","getNature","family","charact","getFamily","push","splice","exists","getCharacteristicsByFamily","name","getUid","subCharacteristic","found","characteristic","childStratum","uid","find","elem","split","toUpperCase","undefined","index","dep","strataImage","interfaceImage","jsonStrata","isInterface","getName","interfaces","children","toJson"],"mappings":"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","file":"strata.js","sourcesContent":["/**\n * Created by Thierry Hubmann\n *\n * Cette classe est développée en ES2015 et est recompilée avec Babel\n * C'est la classe business de la Strate\n */\nimport {Characteristic} from './characteristic';\nimport {SubCharacteristic} from './subCharacteristic';\n\nclass Strata {\n\n    constructor(nature, child) {\n        this.nature = nature;\n        this.natureFamilyAbbrev = null;\n        this.label = null;\n        this.dependencies = new Array();\n        this.characteristics = new Array();\n        this.subCharacteristics = new Array();\n        this.childStrata = new Array();\n        this.child = child;\n\n        this.init();\n\n\n    }\n\n\n    /**\n     * Retourne une strate enfant de la nature en paramètres\n     * @param nature la nature recherchée\n     * @returns la strate enfant\n     */\n        getChildStrataByNature(nature) {\n\n        for (var i = 0; i < this.childStrata.length; i++) {\n            if (this.childStrata[i].getNature() == nature) {\n                return this.childStrata[i];\n            }\n        }\n        return null;\n    }\n\n\n    /**\n     * Retourne les characteristiques correspondant à la famille donnée en paramètre\n     * @param family la famille recherchée\n     * @returns les characteristiques correspondante\n     */\n        getCharacteristicsByFamily(family) {\n        var charact = [];\n        for (var i = 0; i < this.characteristics.length; i++) {\n            if (this.characteristics[i].getFamily() == family) {\n                charact.push(this.characteristics[i]);\n            }\n        }\n        return charact;\n    }\n\n\n    /**\n     * Retourne les sous caractéristiques de la famille en paramètre\n     * @param family\n     * @returns {Array} liste de sous caractéristiques\n     */\n        getSubCharacteristicsByFamily(family) {\n        var charact = [];\n        for (var i = 0; i < this.subCharacteristics.length; i++) {\n            if (this.subCharacteristics[i].getFamily() == family) {\n                charact.push(this.subCharacteristics[i]);\n            }\n        }\n        return charact;\n    }\n\n    /**\n     * Supprime toutes les characteristiques d'une famille\n     * @param family\n     */\n        clearCharacteristicsFromFamily(family) {\n\n        for (var i = 0; i < this.characteristics.length; i++) {\n            if (this.characteristics[i].getFamily() == family) {\n                this.characteristics.splice(i, 1);\n                i--;\n            }\n        }\n    }\n\n    /**\n     * Supprime toutes les sous characteristiques d'une famille\n     * @param family\n     */\n        clearSubCharacteristicsFromFamily(family) {\n        for (var i = 0; i < this.subCharacteristics.length; i++) {\n            if (this.subCharacteristics[i].getFamily() == family) {\n                this.subCharacteristics.splice(i, 1);\n                i--;\n            }\n        }\n    }\n\n    isFamily(family) {\n        var exists = false;\n        if (getCharacteristicsByFamily(family).length > 0) {\n            exists = true;\n        }\n        return exists;\n    }\n\n    /**\n     * Cette méthoe indique si une sous-caracterisitique existe dans une strate.\n     * @param le nom de la sous caracteristique à vérifier\n     * @returns boolean indiquant si la sous-caracteristique existe\n     */\n        isSubCharacteristic(name) {\n        var exists = false;\n        var i = 0;\n        while (exists == false && i < this.subCharacteristics.length) {\n            if (this.subCharacteristics[i].getUid() == name) {\n                exists = true;\n            }\n            i++;\n        }\n        return exists;\n    }\n\n    /**\n     * Ajoute une sous caractéristique sans vérifier si il en existe déjà une pour cette famille\n     * @param subCharacteristic\n     */\n        addSubCharacteristic(subCharacteristic) {\n        this.subCharacteristics.push(subCharacteristic);\n    }\n\n    /**\n     * Remplace une sous caractéristique de la famille de celle donnée en paramètre\n     * @param subCharacteristic\n     */\n        replaceSubCharacteristic(subCharacteristic) {\n        var found = false;\n        var i = 0;\n\n        while (!found && i < this.subCharacteristics.length) {\n            if (subCharacteristic.family == this.subCharacteristics[i].family) {\n                found = true;\n                this.subCharacteristics[i] = subCharacteristic;\n            }\n            i++;\n        }\n        if (!found) {\n            this.subCharacteristics.push(subCharacteristic);\n        }\n    }\n\n    addCharacteristic(characteristic) {\n        this.characteristics.push(characteristic);\n    }\n\n    addChildStrata(childStratum) {\n        this.childStrata.push(childStratum);\n    }\n\n    replaceCharacteristic(characteristic) {\n        var found = false;\n        var i = 0;\n\n        while (!found && i < this.characteristics.length) {\n            if (characteristic.family == this.characteristics[i].family) {\n                found = true;\n                this.characteristics[i] = characteristic;\n            }\n            i++;\n        }\n        if (!found) {\n            this.characteristics.push(characteristic);\n        }\n\n    }\n\n    /**\n     * Permet de savoir si la strate est une strate enfant.\n     * @returns Un booleen qui indique si c'est une strate enfant\n     */\n        isChild() {\n        return this.child;\n    }\n\n    /**\n     * Permet d'indiquer que la strate est une strate enfant\n     * @param child\n     */\n        setChild(child) {\n        this.child = child;\n    }\n\n\n    removeCharacteristic(uid) {\n\n    }\n\n    removeSubCharacteristic(uid) {\n\n    }\n\n    getSubCharacteristics() {\n        return this.subCharacteristics;\n    }\n\n    getCharacteristics() {\n        return this.characteristics;\n    }\n\n\n    getNature() {\n        return this.nature;\n    }\n\n    setNature(nature) {\n        this.nature = nature;\n    }\n\n    /**\n     * Return natureFamily abbreviation (or prefix) of the stratum (e.g. CP for Corrosion products)\n     */\n    getNatureFamilyAbbrev() {\n        if (this.characteristics)\n            this.natureFamilyAbbrev = this.natureFamilyAbbrev || this.characteristics.find(function (elem) {\n                return elem.family == \"natureFamily\"\n            }).name.split(\"Char\")[0].toUpperCase()\n        if (this.natureFamilyAbbrev)\n            return this.natureFamilyAbbrev;\n        else\n            return \"\";\n    }\n\n    /**\n     * setter for label called by Stratigraphy object based on position of stratum in the stratigraphy\n     * and its NatureFamilyAbbrev (e.g: CP2, MC1...)\n     */\n    setLabel(label) {\n        this.label = label;\n    }\n\n    getLabel() {\n        return (this.label);\n    }\n    getUid() {\n        return this.uid;\n    }\n\n    setUid(uid) {\n        this.uid = uid;\n    }\n\n    getName() {\n        if (this.name == undefined) {\n            return this.uid;\n        }\n        else {\n            return this.name;\n        }\n    }\n\n    setName(name) {\n        this.name = name;\n    }\n\n    getIndex() {\n        return this.index;\n    }\n\n    setIndex(index) {\n        this.index = index;\n    }\n\n    findDependency(dep) {\n        for (var i = 0; i < this.dependencies.length; i++) {\n            if (this.dependencies[i] == dep)\n                return true;\n        }\n        return false;\n    }\n\n\n    /**\n     * Permet d'enregistrer le dessin SVG.JS d'une image pour éviter de la redessiner à chaque fois\n     */\n        setStrataImage(strataImage) {\n        this.strataImage = strataImage;\n    }\n\n    getStrataImage() {\n        return this.strataImage;\n    }\n\n    setInterfaceImage(interfaceImage) {\n        this.interfaceImage = interfaceImage;\n    }\n\n    getInterfaceImage() {\n        return this.interfaceImage;\n    }\n\n\n    /**\n     * Cette méthode initialise la strate en ajoutant à un tableau les propriétés modifiables\n     * et en lui attribuant des valeurs par défaut\n     */\n        init() {\n\n        this.dependencies.push('thicknessFamily');\n        this.dependencies.push('widthFamily');\n        this.dependencies.push('continuityFamily');\n        this.dependencies.push('directionFamily');\n\n        //Les strates CM n'ont pas d'interface\n        if (this.nature != \"Corroded metal\") {\n            this.dependencies.push('interfaceprofileFamily');\n        }\n\n        if (this.nature == \"Soil\") {\n\n            this.dependencies.push('colourFamily');\n            this.dependencies.push('brightnessFamily');\n            this.dependencies.push('opacityFamily');\n            this.dependencies.push('magnetismFamily');\n            this.dependencies.push('porosityFamily');\n            this.dependencies.push('cohesionFamily');\n            this.dependencies.push('hardnessFamily');\n            this.dependencies.push('crackingFamily');\n            this.dependencies.push('scompositionFamily');\n            this.dependencies.push('interfacetransitionFamily');\n            this.dependencies.push('interfaceroughnessFamily');\n            this.dependencies.push('interfaceadherenceFamily');\n        }\n\n        if (this.nature == \"Non-Metallic material\") {\n            this.dependencies.push('colourFamily');\n            this.dependencies.push('brightnessFamily');\n            this.dependencies.push('opacityFamily');\n            this.dependencies.push('magnetismFamily');\n            this.dependencies.push('porosityFamily');\n            this.dependencies.push('cohesionFamily');\n            this.dependencies.push('hardnessFamily');\n            this.dependencies.push('crackingFamily');\n            this.dependencies.push('nmmcompositionFamily');\n            this.dependencies.push('interfacetransitionFamily');\n            this.dependencies.push('interfaceroughnessFamily');\n            this.dependencies.push('interfaceadherenceFamily');\n        }\n\n\n        if (this.nature == \"Deposit\") {\n\n            this.dependencies.push('colourFamily');\n            this.dependencies.push('brightnessFamily');\n            this.dependencies.push('opacityFamily');\n            this.dependencies.push('magnetismFamily');\n            this.dependencies.push('porosityFamily');\n            this.dependencies.push('cohesionFamily');\n            this.dependencies.push('hardnessFamily');\n            this.dependencies.push('crackingFamily');\n            this.dependencies.push('dcompositionFamily');\n            this.dependencies.push('interfacetransitionFamily');\n            this.dependencies.push('interfaceroughnessFamily');\n            this.dependencies.push('interfaceadherenceFamily');\n        }\n\n        if (this.nature == \"Pseudomorph of organic material\") {\n            this.dependencies.push('colourFamily');\n            this.dependencies.push('brightnessFamily');\n            this.dependencies.push('opacityFamily');\n            this.dependencies.push('magnetismFamily');\n            this.dependencies.push('porosityFamily');\n            this.dependencies.push('cohesionFamily');\n            this.dependencies.push('hardnessFamily');\n            this.dependencies.push('crackingFamily');\n            this.dependencies.push('pomcompositionFamily');\n            this.dependencies.push('interfacetransitionFamily');\n            this.dependencies.push('interfaceroughnessFamily');\n            this.dependencies.push('interfaceadherenceFamily');\n        }\n\n        if (this.nature == \"Corrosion products\") {\n            this.dependencies.push('colourFamily');\n            this.dependencies.push('brightnessFamily');\n            this.dependencies.push('opacityFamily');\n            this.dependencies.push('magnetismFamily');\n            this.dependencies.push('porosityFamily');\n            this.dependencies.push('cprimicrostructureFamily');\n            this.dependencies.push('cohesionFamily');\n            this.dependencies.push('hardnessFamily');\n            this.dependencies.push('crackingFamily');\n            this.dependencies.push('interfacetransitionFamily');\n            this.dependencies.push('interfaceroughnessFamily');\n            this.dependencies.push('interfaceadherenceFamily');\n            this.dependencies.push('cpcompositionextensionFamily');\n            this.dependencies.push('cprimicrostructureaggregatecompositionFamily');\n            this.dependencies.push('cprimicrostructureaggregatecompositionextensionFamily');\n            this.dependencies.push('cpcompositionFamily');\n            this.dependencies.push('subcpcompositionFamily');\n            this.dependencies.push('subsubcpcompositionFamily');\n            this.dependencies.push('subcprimicrostructureFamily');\n            this.dependencies.push('subcprimicrostructureaggregatecompositionFamily');\n            this.dependencies.push('subsubcprimicrostructureaggregatecompositionFamily');\n        }\n\n        if (this.nature == \"Metal\") {\n\n            this.dependencies.push('colourFamily');\n            this.dependencies.push('brightnessFamily');\n            this.dependencies.push('opacityFamily');\n            this.dependencies.push('magnetismFamily');\n            this.dependencies.push('porosityFamily');\n            this.dependencies.push('mmicrostructureFamily');\n            this.dependencies.push('cohesionFamily');\n            this.dependencies.push('hardnessFamily');\n            this.dependencies.push('crackingFamily');\n            this.dependencies.push('mcompositionFamily');\n            this.dependencies.push('interfacetransitionFamily');\n            this.dependencies.push('interfaceroughnessFamily');\n            this.dependencies.push('interfaceadherenceFamily');\n            this.dependencies.push('submmicrostructureFamily');\n            this.dependencies.push('submcompositionFamily');\n        }\n\n\n    }\n\n    toJson() {\n        var childStrata = [];\n\n        var jsonStrata = {'name': this.getUid(), 'characteristics': [], 'interfaces': [], 'children': []};\n\n        //On récupère les caractéristiques\n        for (var i = 0; i < this.characteristics.length; i++) {\n            if (!this.characteristics[i].isInterface()) {\n                jsonStrata.characteristics.push({'name': this.characteristics[i].getName()});\n            }\n        }\n        //On récupère les sous caractéristiques\n        for (var i = 0; i < this.subCharacteristics.length; i++) {\n            jsonStrata.characteristics.push({'name': this.subCharacteristics[i].getUid()});\n        }\n\n        //On récupère les caractéristiques d'interface\n        for (var i = 0; i < this.characteristics.length; i++) {\n            if (this.characteristics[i].isInterface()) {\n                jsonStrata.interfaces.push({'name': this.characteristics[i].getName()});\n            }\n        }\n\n        //On récupère les strates enfants si ce n'est pas une strate enfant\n        if (!this.child) {\n            for (var i = 0; i < this.childStrata.length; i++) {\n                jsonStrata.children.push(this.childStrata[i].toJson());\n            }\n        }\n\n        return jsonStrata;\n\n    }\n\n\n}\n\nexport{Strata};\n"]}