# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-08-08 12:59
from __future__ import unicode_literals

from django.db import migrations

"""
replacement for Johan script below:
/* ---! A RÉALISER AVANT LA CRÉATION DES DEMANDES DE PUBLICATION DANS MICORR !--- */
/* Insertion des deux groupes d'administrateur */
INSERT INTO auth_group(id, name) VALUES (nextval('auth_group_id_seq'), 'Main administrator');
INSERT INTO auth_group(id, name) VALUES (nextval('auth_group_id_seq'), 'Delegated administrator');

/*
Pour chaque utilisateur devant être associé à un des deux rôles ci-dessus, lancer cette requête en remplaçant :
- username : remplacer par le nom d'utilisateur de la personne à associer à un rôle (par ex : micorr)
- group_name : remplacer par le nom du groupe à associer à l'utilisateur choisi (Main administrator ou Delegated administrator)
Pour le rôle Main administrator, un seul utilisateur doit lui être assigné (username = 'micorr')
*/
INSERT INTO users_user_groups(id, user_id, group_id)
WITH userselect AS (
SELECT id AS iduser FROM users_user WHERE username = 'username'
),
groupselect AS (
SELECT id AS idgroup FROM auth_group WHERE name = 'group_name'
)
SELECT nextval('users_user_groups_id_seq'), iduser, idgroup FROM userselect, groupselect
"""

def add_admin_groups(apps, schema_editor):
    Group = apps.get_model('auth.Group')

    # main_admin_group, created =\
    Group.objects.get_or_create(name='Main administrator')
    Group.objects.get_or_create(name='Delegated administrator')

    # Optionaly hard code admin group assignment to micorr user (if it exists)
    # But better to do it interactively in admin app
    # Users = apps.get_model('users.User')
    # micorr = Users.objects.filter(username='micorr').first()
    # if micorr:
    #     micorr.groups.add(main_admin_group)

def remove_admin_groups(apps, schema_editor):
    Group = apps.get_model('auth.Group')
    Group.objects.filter(
        name__in=('Main administrator', 'Delegated administrator')
    ).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0002_auto_20170730_0009'),
    ]

    operations = [
        migrations.RunPython(add_admin_groups, remove_admin_groups)
    ]
