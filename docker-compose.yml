version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}

services:
  postgres:
    build: ./compose/postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    env_file: .env
    ports:
      - "5432:5432"

  neo4j:
    build: ./compose/neo4j
    volumes:
      - ./data/neo4j:/data


    env_file: .env.neo4j #for setting NEO4J_AUTH var in user/password format
    environment:
      - NEO4J_dbms_allowFormatMigration=true
      # to load initial data in neo4j graph.db
      # copy a neo4j-admin dump file to compose/neo4j/initial_neo4j-admin.dump
      # remove it on subsequent builds to avoid overriding data
      - EXTENSION_SCRIPT=/bootstrap_data.sh
      #- EXTENSION_SCRIPT=/backup.sh
    ports:
      - "7474:7474"
      - "7687:7687"

  django:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    volumes:
      - ./micorr/media:/app/micorr/media
    user: django
    depends_on:
      - postgres
      - redis
      - neo4j
    command: /gunicorn.sh
    env_file: .env

  node:
    build:
      context: .
      dockerfile: ./compose/node/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - django

  nginx:
    build: ./compose/nginx
    restart: always
    depends_on:
      - django
      - node
      - certbot
    environment:
      # MY_DOMAIN_NAME is used by both nginx (for allowed hosts) and certbot for getting ssl certificate
      # set MY_DOMAIN_NAME env var to eg.: micorr.org
      - MY_DOMAIN_NAME=${MY_DOMAIN_NAME}

    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt

  certbot:
    image: quay.io/letsencrypt/letsencrypt
    command: bash -c "sleep 6 && certbot certonly -n --standalone -d ${MY_DOMAIN_NAME} --staging --agree-tos --email micorr@he-arc.ch --server https://acme-v01.api.letsencrypt.org/directory --rsa-key-size 4096 --verbose --keep-until-expiring --preferred-challenges http-01"
    entrypoint: ""
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
    ports:
      - "80"
      - "443"
    environment:
      - TERM=xterm


  redis:
    image: redis:latest
